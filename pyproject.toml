[project]
name = "camtasio"
description = "Python toolkit for programmatically manipulating Camtasia project files"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
  { name = "Adam Twardoch", email = "adam+github@twardoch.com" },
]
maintainers = [
  { name = "Adam Twardoch", email = "adam+github@twardoch.com" },
]
keywords = ["automation", "camtasia", "cmproj", "editing", "tscproj", "video"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Multimedia :: Video",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "fire>=0.7.0",
  "loguru>=0.7.3",
  "orjson>=3.10.0",
  "pydantic>=2.0",
  "rich>=13.0.0",
]
dynamic = ["version"]

[project.urls]
Changelog = "https://github.com/twardoch/camtasio/blob/main/CHANGELOG.md"
Documentation = "https://github.com/twardoch/camtasio"
Homepage = "https://github.com/twardoch/camtasio"
Issues = "https://github.com/twardoch/camtasio/issues"
Repository = "https://github.com/twardoch/camtasio"

[project.scripts]
camtasio = "camtasio.cli.app:main"

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "ruff>=0.1.0",
  "mypy>=1.0",
  "twine>=4.0.0",
  "build>=1.0.0",
  "hypothesis>=6.0.0",
]

# this_file: camtasio/pyproject.toml
[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
source_pkgs = ["camtasio"]
branch = true
parallel = true

[tool.coverage.paths]
camtasio = ["src/camtasio", "*/camtasio/src/camtasio"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/camtasio/_version.py"

[tool.hatch.build.targets.sdist]
include = [
  "/src",
]

[tool.hatch.build.targets.wheel]
packages = ["src/camtasio"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--strict-markers",
  "--cov=camtasio",
  "--cov-report=term-missing",
  "--cov-report=html",
]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 100
src = ["src", "tests"]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "UP",  # pyupgrade
  "N",  # pep8-naming
  "RUF",  # Ruff-specific rules
]
ignore = [
  "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused

[tool.ruff.lint.isort]
known-first-party = ["camtasio"]

